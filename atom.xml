<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GreenMeeple</title>
  <icon>https://greenmeeple.github.io/img/avatar.png</icon>
  <subtitle>Coding, Boardgames, Language learning.</subtitle>
  <link href="https://greenmeeple.github.io/atom.xml" rel="self"/>
  
  <link href="https://greenmeeple.github.io/"/>
  <updated>2025-05-09T01:49:38.524Z</updated>
  <id>https://greenmeeple.github.io/</id>
  
  <author>
    <name>Alex Li</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python-telegram-bot development experience and notes</title>
    <link href="https://greenmeeple.github.io/python/tgbot/"/>
    <id>https://greenmeeple.github.io/python/tgbot/</id>
    <published>2025-05-08T13:03:35.000Z</published>
    <updated>2025-05-09T01:49:38.524Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;This blog post is trying to tell you:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;My personal experience and notes when using &lt;a</summary>
        
      
    
    
    
    <category term="Python" scheme="https://greenmeeple.github.io/categories/Python/"/>
    
    
    <category term="Python" scheme="https://greenmeeple.github.io/tags/Python/"/>
    
    <category term="Telegram" scheme="https://greenmeeple.github.io/tags/Telegram/"/>
    
  </entry>
  
  <entry>
    <title>UdS Fahrplan Bot</title>
    <link href="https://greenmeeple.github.io/projects/udsfahrplan-bot/"/>
    <id>https://greenmeeple.github.io/projects/udsfahrplan-bot/</id>
    <published>2025-05-08T12:04:55.000Z</published>
    <updated>2025-05-09T02:49:49.954Z</updated>
    
    
    <summary type="html">&lt;p&gt;A lightweight Telegram bot designed for Saarland University students — offering fast, clear, and focused public transport information using SaarVV and HAFAS APIs. — &lt;strong&gt;&lt;a href=&quot;https://t.me/udsfahrbot&quot;&gt;Try Now&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;🔍-What-it-is&quot;&gt;&lt;a href=&quot;#🔍-What-it-is&quot; class=&quot;headerlink&quot; title=&quot;🔍 What it is&quot;&gt;&lt;/a&gt;🔍 What it is&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;UdS Fahrplan&lt;/strong&gt; is a minimal alternative to the full Saarfahrplan app. No clutter. No overwhelming options. Just a clean Telegram interface for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;🔄 Trip planning with &lt;code&gt;/trip&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;🕒 Live departure boards with &lt;code&gt;/depart&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;🏠 One-tap departures from your home station with &lt;code&gt;/home&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Built with students and locals in mind.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;✨-Features&quot;&gt;&lt;a href=&quot;#✨-Features&quot; class=&quot;headerlink&quot; title=&quot;✨ Features&quot;&gt;&lt;/a&gt;✨ Features&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&amp;#x2F;trip&lt;/strong&gt; – Search from A to B in Saarland &amp;amp; Luxembourg&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;#x2F;depart&lt;/strong&gt; – View all upcoming buses from any station&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;#x2F;home&lt;/strong&gt; – Configure your home station and check buses in both directions (e.g., City ↔ Dudweiler)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;#x2F;sethome&lt;/strong&gt; – Set or update your personal home station&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Intelligent Filtering&lt;/strong&gt; – Excludes school buses, allows regional&amp;#x2F;suburban focus&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Persistent Storage&lt;/strong&gt; – Remembers user settings across bot restarts&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Related-Projects&quot;&gt;&lt;a href=&quot;#Related-Projects&quot; class=&quot;headerlink&quot; title=&quot;Related Projects&quot;&gt;&lt;/a&gt;Related Projects&lt;/h2&gt;</summary>
    
    
    
    <category term="Projects" scheme="https://greenmeeple.github.io/categories/Projects/"/>
    
    
    <category term="hafas" scheme="https://greenmeeple.github.io/tags/hafas/"/>
    
    <category term="Python" scheme="https://greenmeeple.github.io/tags/Python/"/>
    
    <category term="Telegram" scheme="https://greenmeeple.github.io/tags/Telegram/"/>
    
  </entry>
  
  <entry>
    <title>🍽 🥨 MensaarLecker -- A beloved tool to find out Mensa Ladies&#39; favourite menu using Selenium🥨 🍽</title>
    <link href="https://greenmeeple.github.io/projects/mensaar/"/>
    <id>https://greenmeeple.github.io/projects/mensaar/</id>
    <published>2025-05-08T03:03:35.000Z</published>
    <updated>2025-05-08T20:24:33.527Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Repository: &lt;a href=&quot;https://github.com/greenmeeple/MensaarLecker&quot;&gt;MensaarLecker&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As an &lt;a href=&quot;https://www.uni-saarland.de/start.html&quot;&gt;UdS&lt;/a&gt; Student,&lt;br&gt;Are you tired of seeing french fries🍟 3 times a week, or wondering when I can have the best pizza 🍕 in the Mensacafe?&lt;br&gt;MensaarLecker aims to collect all the data from Menu 1, 2, and Mensacafe to trace your favourite, or Mensa Ladies’, favourite menu!&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;🆕-Updates&quot;&gt;&lt;a href=&quot;#🆕-Updates&quot; class=&quot;headerlink&quot; title=&quot;🆕 Updates&quot;&gt;&lt;/a&gt;🆕 Updates&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;05.08 – Telegram Bot &lt;a href=&quot;https://t.me/Mensaar_Bot&quot;&gt;@Mensaar_Bot&lt;/a&gt; are published.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;(See my development blog in here! &lt;a href=&quot;../mensaarlog3&quot;&gt;MensaarLecker Development Log 3 – Telegram Bot Deployment and Integration&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;04.21 – &lt;a href=&quot;HTW&quot;&gt;https://mensaar.de/#/menu/htwcrb&lt;/a&gt; menus are now added to the statistics.&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;🥗-Description&quot;&gt;&lt;a href=&quot;#🥗-Description&quot; class=&quot;headerlink&quot; title=&quot;🥗 Description&quot;&gt;&lt;/a&gt;🥗 Description&lt;/h2&gt;&lt;p&gt;A fully automated scraper and static website for the Saarbrücken Mensa, powered by Python, Selenium, Google Sheets, and GitHub Actions.&lt;/p&gt;</summary>
    
    
    
    <category term="Projects" scheme="https://greenmeeple.github.io/categories/Projects/"/>
    
    
    <category term="Python" scheme="https://greenmeeple.github.io/tags/Python/"/>
    
    <category term="Scraper" scheme="https://greenmeeple.github.io/tags/Scraper/"/>
    
    <category term="Selenium" scheme="https://greenmeeple.github.io/tags/Selenium/"/>
    
  </entry>
  
  <entry>
    <title>MensaarLecker Development Log 3 -- Telegram Bot Deployment and Integration</title>
    <link href="https://greenmeeple.github.io/projects/mensaarlog3/"/>
    <id>https://greenmeeple.github.io/projects/mensaarlog3/</id>
    <published>2025-05-07T13:03:35.000Z</published>
    <updated>2025-05-08T23:04:58.870Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;This blog post is trying to tell you:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;My personal experience when developing a web crawler using &lt;a href=&quot;https://selenium-python.readthedocs.io/&quot;&gt;Selenium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Explained with examples from my Repository: &lt;a href=&quot;https://github.com/greenmeeple/MensaarLecker&quot;&gt;MensaarLecker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;For further details, feel free to **Try the bot: &lt;a href=&quot;https://t.me/Mensaar_Bot&quot;&gt;@Mensaar_Bot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;New-Features&quot;&gt;&lt;a href=&quot;#New-Features&quot; class=&quot;headerlink&quot; title=&quot;New Features&quot;&gt;&lt;/a&gt;New Features&lt;/h2&gt;&lt;h3 id=&quot;HTW-menu&quot;&gt;&lt;a href=&quot;#HTW-menu&quot; class=&quot;headerlink&quot; title=&quot;HTW menu&quot;&gt;&lt;/a&gt;HTW menu&lt;/h3&gt;&lt;p&gt;After the website is published, we noticed that people now prefer to have lunch in &lt;a href=&quot;https://www.htwsaar.de/hochschule/standorte-und-kontakt/campus-rotenbuehl&quot;&gt;HTW Campus Rotenbühl&lt;/a&gt;. Since their menu come from the same site, it is very easy to introduce new menu to our project.&lt;/p&gt;
&lt;h3 id=&quot;New-website-layout&quot;&gt;&lt;a href=&quot;#New-website-layout&quot; class=&quot;headerlink&quot; title=&quot;New website layout&quot;&gt;&lt;/a&gt;New website layout&lt;/h3&gt;&lt;p&gt;Before we used two pages to store today’s menu and the menu history. And we think in general, all menu are simple texts, so we can put all contents into the index page without any problem. We can switch the visibility using JavaScript, then for the whole HTML code again we stuffed in the python script to for our daily Github workflow to run.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;JavaScript&quot;&gt;&amp;lt;script&amp;gt;
    function show(id) &amp;#123;&amp;#123;
    document.querySelectorAll(&#39;.section&#39;).forEach(el =&gt; el.classList.remove(&#39;active&#39;));
    document.getElementById(id).classList.add(&#39;active&#39;);
    &amp;#125;&amp;#125;
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;HTML&quot;&gt;&amp;lt;h1&amp;gt;Mensaar Menu - &amp;#123;today&amp;#125;&amp;lt;/h1&amp;gt;
&amp;lt;div class=&amp;quot;buttons&amp;quot;&amp;gt;
    &amp;lt;button class=&amp;quot;button&amp;quot; onclick=&amp;quot;show(&amp;#39;today-uds&amp;#39;)&amp;quot;&amp;gt;📅 UDS Today&amp;lt;/button&amp;gt;
    &amp;lt;button class=&amp;quot;button&amp;quot; onclick=&amp;quot;show(&amp;#39;today-htw&amp;#39;)&amp;quot;&amp;gt;📅 HTW Today&amp;lt;/button&amp;gt;
    &amp;lt;button class=&amp;quot;button&amp;quot; onclick=&amp;quot;show(&amp;#39;full-uds&amp;#39;)&amp;quot;&amp;gt;📋 Full UDS&amp;lt;/button&amp;gt;
    &amp;lt;button class=&amp;quot;button&amp;quot; onclick=&amp;quot;show(&amp;#39;full-htw&amp;#39;)&amp;quot;&amp;gt;📋 Full HTW&amp;lt;/button&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;div id=&amp;quot;today-uds&amp;quot; class=&amp;quot;section active&amp;quot;&amp;gt;
&amp;lt;h2&amp;gt;UDS – Today&amp;#39;s Menu&amp;lt;/h2&amp;gt;
&amp;#123;meal_cards(uds_data)&amp;#125;
&amp;lt;/div&amp;gt;

&amp;lt;div id=&amp;quot;today-htw&amp;quot; class=&amp;quot;section&amp;quot;&amp;gt;
&amp;lt;h2&amp;gt;HTW – Today&amp;#39;s Menu&amp;lt;/h2&amp;gt;
&amp;#123;meal_cards(htw_data)&amp;#125;
&amp;lt;/div&amp;gt;

&amp;lt;div id=&amp;quot;full-uds&amp;quot; class=&amp;quot;section&amp;quot;&amp;gt;
&amp;lt;h2&amp;gt;📋 Full UDS Menu&amp;lt;/h2&amp;gt;
&amp;lt;table id=&amp;quot;uds-table&amp;quot;&amp;gt;
    &amp;lt;thead&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;th&amp;gt;Date&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;Counter&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;Meal&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;Component 1&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;Component 2&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;Component 3&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;Component 4&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;Component 5&amp;lt;/th&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/thead&amp;gt;
    &amp;lt;tbody&amp;gt;&amp;#123;table_rows(uds_data)&amp;#125;&amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;div id=&amp;quot;full-htw&amp;quot; class=&amp;quot;section&amp;quot;&amp;gt;
&amp;lt;h2&amp;gt;📋 Full HTW Menu&amp;lt;/h2&amp;gt;
&amp;lt;table id=&amp;quot;htw-table&amp;quot;&amp;gt;
    &amp;lt;thead&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;th&amp;gt;Date&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;Counter&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;Meal&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;Component 1&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;Component 2&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;Component 3&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;Component 4&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;Component 5&amp;lt;/th&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/thead&amp;gt;
    &amp;lt;tbody&amp;gt;&amp;#123;table_rows(htw_data)&amp;#125;&amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;Telegram-Bot-–-Mensaar-Bot&quot;&gt;&lt;a href=&quot;#Telegram-Bot-–-Mensaar-Bot&quot; class=&quot;headerlink&quot; title=&quot;Telegram Bot – @Mensaar_Bot&quot;&gt;&lt;/a&gt;Telegram Bot – &lt;code&gt;@Mensaar_Bot&lt;/code&gt;&lt;/h3&gt;&lt;p&gt;On top of the webiste, we can reuse the scraping code to create a telegram bot. First, we need to create a bot and get its API key using &lt;a href=&quot;https://telegram.me/BotFather&quot;&gt;botfather&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    <category term="Projects" scheme="https://greenmeeple.github.io/categories/Projects/"/>
    
    
    <category term="Python" scheme="https://greenmeeple.github.io/tags/Python/"/>
    
    <category term="Telegram" scheme="https://greenmeeple.github.io/tags/Telegram/"/>
    
  </entry>
  
  <entry>
    <title>HAFAS Bitmask Calculator</title>
    <link href="https://greenmeeple.github.io/projects/hafas-bitmask-calculator%20copy/"/>
    <id>https://greenmeeple.github.io/projects/hafas-bitmask-calculator%20copy/</id>
    <published>2025-04-30T12:04:55.000Z</published>
    <updated>2025-05-09T02:38:22.330Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://greenmeeple.github.io/hafas-bitmask-calculator/&quot;&gt;Web Demo&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is a simple web-based tool to help you &lt;strong&gt;decode&lt;/strong&gt; and &lt;strong&gt;encode&lt;/strong&gt; bitmasks used by the &lt;a href=&quot;https://de.wikipedia.org/wiki/HAFAS&quot;&gt;HAFAS&lt;/a&gt; (HaCon Fahrplan-Auskunfts-System) API.&lt;br&gt;It visually maps a decimal bitmask to the transport modes it represents and vice versa.&lt;/p&gt;
&lt;h2 id=&quot;🔍-What-is-HAFAS&quot;&gt;&lt;a href=&quot;#🔍-What-is-HAFAS&quot; class=&quot;headerlink&quot; title=&quot;🔍 What is HAFAS?&quot;&gt;&lt;/a&gt;🔍 What is HAFAS?&lt;/h2&gt;&lt;p&gt;HAFAS is a timetable and journey planning system widely used across European transport networks, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.bahn.com/en&quot;&gt;Deutsche Bahn (DB)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://saarvv.de/&quot;&gt;SaarVV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mobiliteit.lu/&quot;&gt;Luxembourg Mobilitéit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Many other regional operators&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In HAFAS APIs, transport modes (ICE trains, buses, trams, ferries, etc.) are often encoded in a &lt;strong&gt;bitmask&lt;/strong&gt; —&lt;br&gt;a single number where each bit (1, 2, 4, 8, …) represents a specific type of transport.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;✨-Features&quot;&gt;&lt;a href=&quot;#✨-Features&quot; class=&quot;headerlink&quot; title=&quot;✨ Features&quot;&gt;&lt;/a&gt;✨ Features&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;🔢 Enter a number to &lt;strong&gt;decode&lt;/strong&gt; it into selected transport modes&lt;/li&gt;
&lt;li&gt;✅ Click transport icons to &lt;strong&gt;encode&lt;/strong&gt; a bitmask value&lt;/li&gt;
&lt;li&gt;🔄 Switch between different &lt;strong&gt;mode sets&lt;/strong&gt; (DB, SaarVV, Luxembourg, HAFAS client spec)&lt;/li&gt;
&lt;li&gt;⚠️ Input capped to valid 11-bit range (0–2047)&lt;/li&gt;
&lt;li&gt;💡 Uses the official &lt;a href=&quot;https://github.com/public-transport/hafas-client/blob/main/docs/writing-a-profile.md&quot;&gt;hafas-client mode bitmask&lt;/a&gt; as one profile&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</summary>
    
    
    
    <category term="Projects" scheme="https://greenmeeple.github.io/categories/Projects/"/>
    
    
    <category term="React" scheme="https://greenmeeple.github.io/tags/React/"/>
    
    <category term="hafas" scheme="https://greenmeeple.github.io/tags/hafas/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Plugins and Personalization of this site</title>
    <link href="https://greenmeeple.github.io/site/personalize/"/>
    <id>https://greenmeeple.github.io/site/personalize/</id>
    <published>2025-04-03T15:02:08.000Z</published>
    <updated>2025-05-07T14:21:57.745Z</updated>
    
    
    <summary type="html">&lt;p&gt;Here are all the plugins and niche settings that personalize this blog and the &lt;a href=&quot;https://github.com/ppoffice/hexo-theme-icarus&quot;&gt;Icarus&lt;/a&gt; theme.&lt;/p&gt;
&lt;h2 id=&quot;Remove-Uppercase-Details&quot;&gt;&lt;a href=&quot;#Remove-Uppercase-Details&quot; class=&quot;headerlink&quot; title=&quot;Remove Uppercase Details&quot;&gt;&lt;/a&gt;Remove Uppercase Details&lt;/h2&gt;&lt;p&gt;The Uppercase characters overflowed the page and affects the aesthetic.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/site_notes/uppercase.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;Find the css tag that contains the keyword &lt;strong&gt;Uppercase&lt;/strong&gt; and remove it.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;jsx&quot;&gt;&amp;#123;page.layout !== &amp;#39;page&amp;#39; ? &amp;lt;div class=&amp;quot;article-meta is-size-7 is-uppercase level is-mobile&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;Better-Sans-Font&quot;&gt;&lt;a href=&quot;#Better-Sans-Font&quot; class=&quot;headerlink&quot; title=&quot;Better Sans Font&quot;&gt;&lt;/a&gt;Better Sans Font&lt;/h2&gt;&lt;p&gt;In &lt;code&gt;_config.icarus.yml&lt;/code&gt;, find the following section &lt;code&gt;providers&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;yml&quot;&gt;providers:
    # Name or URL template of the JavaScript and/or stylesheet CDN provider
    cdn: jsdelivr
    # Name or URL template of the webfont CDN provider
    fontcdn: https://fonts.googleapis.com/css2?family=Noto+Sans+HK:wght@100..900&amp;amp;display=swap
    # Name or URL of the fontawesome icon font CDN provider
    iconcdn: fontawesome
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Choose your favorite font in &lt;a href=&quot;https://fonts.google.com/&quot;&gt;Google Fonts&lt;/a&gt;, and paste the url of the font to &lt;code&gt;fontcdn&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="SiteNote" scheme="https://greenmeeple.github.io/categories/SiteNote/"/>
    
    
    <category term="Hexo" scheme="https://greenmeeple.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>MensaarLecker Development Log 2 -- Web Developing and GitHub Workflow</title>
    <link href="https://greenmeeple.github.io/projects/mensaarlog2/"/>
    <id>https://greenmeeple.github.io/projects/mensaarlog2/</id>
    <published>2025-03-21T04:03:35.000Z</published>
    <updated>2025-05-08T23:03:07.631Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;This blog post is trying to tell you:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;My personal experience when developing a web crawler using &lt;a href=&quot;https://selenium-python.readthedocs.io/&quot;&gt;Selenium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Explained with examples from my Repository: &lt;a href=&quot;https://github.com/greenmeeple/MensaarLecker&quot;&gt;MensaarLecker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Fetching-Data-from-Web-Development&quot;&gt;&lt;a href=&quot;#Fetching-Data-from-Web-Development&quot; class=&quot;headerlink&quot; title=&quot;Fetching Data from Web Development&quot;&gt;&lt;/a&gt;Fetching Data from Web Development&lt;/h2&gt;&lt;p&gt;Previous post: &lt;a href=&quot;../mensaarlog1&quot;&gt;MensaarLecker Development Log 1 – Web Crawling&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Continuing from last post, we have already implemented a script that collect the Mensa menu and stored it on Google Sheets. It is time to build our web interface to connect the database.&lt;/p&gt;
&lt;h3 id=&quot;Fetch-Data-from-Google-Sheets-using-Publish&quot;&gt;&lt;a href=&quot;#Fetch-Data-from-Google-Sheets-using-Publish&quot; class=&quot;headerlink&quot; title=&quot;Fetch Data from Google Sheets using Publish&quot;&gt;&lt;/a&gt;Fetch Data from Google Sheets using Publish&lt;/h3&gt;&lt;p&gt;First, we need to publish our spreadsheet so that it is public to fetch the data.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;In the Spreadsheet, click &lt;strong&gt;Share&lt;/strong&gt; → Change access to Anyone with the link.&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;/images/mensaar/sheetshare.png&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click &lt;strong&gt;File&lt;/strong&gt; → &lt;strong&gt;Share&lt;/strong&gt; → &lt;strong&gt;Publish&lt;/strong&gt; to the web.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Select &lt;strong&gt;Entire Document&lt;/strong&gt; → &lt;strong&gt;Comma-separated values (.csv)&lt;/strong&gt; and click Publish.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Copy the public CSV link.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;SCRIPT_URL = &amp;#123;PUBLISH_LINK&amp;#125;

# Fetch JSON data
def fetch_menu():
    try:
        response = requests.get(SCRIPT_URL)
        response.raise_for_status()  # Raise error if bad response
        return response.json()
    except requests.exceptions.RequestException as e:
        print(f&amp;quot;❌ Error fetching menu: &amp;#123;e&amp;#125;&amp;quot;)
        return []
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However, the script return no data, why?&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;error&quot;&gt;Access to fetch at &amp;#39;https://docs.google.com/spreadsheets/...&amp;#39; from origin &amp;#39;null&amp;#39; has been blocked 
by CORS policy: No &amp;#39;Access-Control-Allow-Origin&amp;#39; header is present on the requested resource. 
If an opaque response serves your needs, set the request&amp;#39;s mode to &amp;#39;no-cors&amp;#39; to fetch the resource with CORS disabled.
&lt;/code&gt;&lt;/pre&gt;</summary>
    
    
    
    <category term="Projects" scheme="https://greenmeeple.github.io/categories/Projects/"/>
    
    
    <category term="Python" scheme="https://greenmeeple.github.io/tags/Python/"/>
    
    <category term="Scraper" scheme="https://greenmeeple.github.io/tags/Scraper/"/>
    
    <category term="Selenium" scheme="https://greenmeeple.github.io/tags/Selenium/"/>
    
  </entry>
  
  <entry>
    <title>MensaarLecker Development Log 1 -- Web Crawling</title>
    <link href="https://greenmeeple.github.io/projects/mensaarlog1/"/>
    <id>https://greenmeeple.github.io/projects/mensaarlog1/</id>
    <published>2025-03-20T04:03:35.000Z</published>
    <updated>2025-05-09T01:43:49.190Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;This blog post is trying to tell you:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;My personal experience when developing a web crawler using &lt;a href=&quot;https://selenium-python.readthedocs.io/&quot;&gt;Selenium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Explained with examples from my Repository: &lt;a href=&quot;https://github.com/greenmeeple/MensaarLecker&quot;&gt;MensaarLecker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Motivation&quot;&gt;&lt;a href=&quot;#Motivation&quot; class=&quot;headerlink&quot; title=&quot;Motivation&quot;&gt;&lt;/a&gt;Motivation&lt;/h2&gt;&lt;p&gt;Me and my friends &lt;del&gt;hate&lt;/del&gt;&lt;strong&gt;love&lt;/strong&gt; the UdS Mensa so much! The infinite frozen food and french fries menus give us so much energy and motivation for the 5-hour afternoon coding marathon. However, no one actually knows how many potatoes they have exterminated throughout the week. We have a genius webpage created by some &lt;a href=&quot;https://gibtesheuteschnitzel.de/&quot;&gt;Schnitzel lover&lt;/a&gt;. Personally, I like its minimalistic layout and determination on Schnitzel searching. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;However, we want more.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It’s not just Schnitzel; we want to know everything about their menu. We want to know what’s inside the mensa ladies’ brains when they design next week’s menu.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The desire never ends. We need more data, more details, more, More, &lt;strong&gt;MORE!&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Developing-Process&quot;&gt;&lt;a href=&quot;#Developing-Process&quot; class=&quot;headerlink&quot; title=&quot;Developing Process&quot;&gt;&lt;/a&gt;Developing Process&lt;/h2&gt;&lt;p&gt;Our Goal here is simple:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Scrape the Mensa menu every weekday and store it to Google Sheets&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fetch the Data Collection from Google Sheets and update the website&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;Web-Scraping&quot;&gt;&lt;a href=&quot;#Web-Scraping&quot; class=&quot;headerlink&quot; title=&quot;Web Scraping&quot;&gt;&lt;/a&gt;Web Scraping&lt;/h2&gt;</summary>
    
    
    
    <category term="Projects" scheme="https://greenmeeple.github.io/categories/Projects/"/>
    
    
    <category term="Python" scheme="https://greenmeeple.github.io/tags/Python/"/>
    
    <category term="Scraper" scheme="https://greenmeeple.github.io/tags/Scraper/"/>
    
    <category term="Selenium" scheme="https://greenmeeple.github.io/tags/Selenium/"/>
    
  </entry>
  
  <entry>
    <title>Appium commands that are commonly used on Mac</title>
    <link href="https://greenmeeple.github.io/appium/"/>
    <id>https://greenmeeple.github.io/appium/</id>
    <published>2025-01-01T18:36:48.000Z</published>
    <updated>2025-05-09T01:42:16.465Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;This blog post is trying to tell you:&lt;/strong&gt;&lt;br&gt;Every details and attributes you may need for your first appium automation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In this example, we will use &lt;a href=&quot;https://github.com/appium/appium-inspector&quot;&gt;Appium Inspector&lt;/a&gt; to start a seesion on your emulator on &lt;a href=&quot;https://developer.android.com/studio&quot;&gt;Android Studio&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Start-appium&quot;&gt;&lt;a href=&quot;#Start-appium&quot; class=&quot;headerlink&quot; title=&quot;Start appium&quot;&gt;&lt;/a&gt;Start appium&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/images/appium/start.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;First, start the connection with Appium by &lt;code&gt;cmd appium --allow-cors&lt;/code&gt;. It also gives you the &lt;code&gt;remote url&lt;/code&gt; and the &lt;code&gt;automationName&lt;/code&gt; that can be used in the &lt;a href=&quot;https://github.com/appium/appium-inspector&quot;&gt;Appium Inspector&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/appium/inspector.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Start-Session&quot;&gt;&lt;a href=&quot;#Start-Session&quot; class=&quot;headerlink&quot; title=&quot;Start Session&quot;&gt;&lt;/a&gt;Start Session&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;deviceName&lt;/strong&gt;:  &lt;code&gt;adb devices&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;platformName&lt;/strong&gt; - &lt;code&gt;appium driver list&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;platformVersion&lt;/strong&gt; -  &lt;code&gt;adb shell getprop ro.build.version.release&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/images/appium/session.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/appium/inspector2.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Appium" scheme="https://greenmeeple.github.io/categories/Appium/"/>
    
    
    <category term="Appium" scheme="https://greenmeeple.github.io/tags/Appium/"/>
    
    <category term="App Testing" scheme="https://greenmeeple.github.io/tags/App-Testing/"/>
    
    <category term="Android" scheme="https://greenmeeple.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Automata, Games, and Verification (Portal)</title>
    <link href="https://greenmeeple.github.io/notes/agv/"/>
    <id>https://greenmeeple.github.io/notes/agv/</id>
    <published>2024-12-22T15:35:16.000Z</published>
    <updated>2025-05-09T01:52:22.724Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;This is a learning note of a course in &lt;a href=&quot;https://cispa.de/de&quot;&gt;CISPA&lt;/a&gt;, UdS. Taught by Bernd Finkbeiner&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Chapter-1-Introduction&quot;&gt;&lt;a href=&quot;#Chapter-1-Introduction&quot; class=&quot;headerlink&quot; title=&quot;Chapter 1. Introduction&quot;&gt;&lt;/a&gt;Chapter 1. Introduction&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;Sections&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;Exercise&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://greenmeeple.github.io/notes/AGV/agv1-1/&quot;&gt;1.1. Model Checking&lt;/a&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://greenmeeple.github.io/notes/AGV/agv1-2/&quot;&gt;1.2. Synthesis&lt;/a&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://greenmeeple.github.io/notes/AGV/agv1-3/&quot;&gt;1.3. The Logic-Automata Connection&lt;/a&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 id=&quot;Chapter-2-Buchi-Automata&quot;&gt;&lt;a href=&quot;#Chapter-2-Buchi-Automata&quot; class=&quot;headerlink&quot; title=&quot;Chapter 2. Büchi Automata&quot;&gt;&lt;/a&gt;Chapter 2. Büchi Automata&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;Sections&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;Exercise&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://greenmeeple.github.io/notes/AGV/agv2-1/&quot;&gt;2.1. Preliminaries&lt;/a&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://greenmeeple.github.io/notes/AGV/agv2-2/&quot;&gt;2.2. Automata over Infinite Words&lt;/a&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://greenmeeple.github.io/notes/AGV/agv2-3/&quot;&gt;2.3. The Büchi Acceptance Condition&lt;/a&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 id=&quot;Chapter-3-Buchi’s-Characterization-Theorem&quot;&gt;&lt;a href=&quot;#Chapter-3-Buchi’s-Characterization-Theorem&quot; class=&quot;headerlink&quot; title=&quot;Chapter 3. Büchi’s Characterization Theorem&quot;&gt;&lt;/a&gt;Chapter 3. Büchi’s Characterization Theorem&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;Sections&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;Exercise&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://greenmeeple.github.io/notes/AGV/agv3-1/&quot;&gt;3.1. Kleene’s Theorem&lt;/a&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://greenmeeple.github.io/notes/AGV/agv3-2/&quot;&gt;3.2. $&#92;omega$-regular language&lt;/a&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://greenmeeple.github.io/notes/AGV/agv3-3/&quot;&gt;3.3 Closure Properties of the Büchi-recognizable languages (Intersection and Union)&lt;/a&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://greenmeeple.github.io/notes/AGV/agv3-4/&quot;&gt;3.4 Closure Properties of the Büchi-recognizable languages (Concatenations)&lt;/a&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://greenmeeple.github.io/notes/AGV/agv3-5/&quot;&gt;3.5 Büchi’s Characterization Theorem&lt;/a&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 id=&quot;Chapter-4-Deterministic-Buchi-Automata&quot;&gt;&lt;a href=&quot;#Chapter-4-Deterministic-Buchi-Automata&quot; class=&quot;headerlink&quot; title=&quot;Chapter 4. Deterministic Büchi Automata&quot;&gt;&lt;/a&gt;Chapter 4. Deterministic Büchi Automata&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;Sections&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;Exercise&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://greenmeeple.github.io/notes/AGV/agv4-1/&quot;&gt;4.1. Deterministic vs. Nondeterministic Büchi Automata&lt;/a&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;&lt;a href=&quot;https://greenmeeple.github.io/notes/AGV/agv4-2/&quot;&gt;4.2. Complementation of deterministic Büchi Automata&lt;/a&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 id=&quot;Chapter-5-Complementation-of-Buchi-automata&quot;&gt;&lt;a href=&quot;#Chapter-5-Complementation-of-Buchi-automata&quot; class=&quot;headerlink&quot; title=&quot;Chapter 5. Complementation of Büchi automata&quot;&gt;&lt;/a&gt;Chapter 5. Complementation of Büchi automata&lt;/h2&gt;</summary>
    
    
    
    <category term="Notes" scheme="https://greenmeeple.github.io/categories/Notes/"/>
    
    
    <category term="UdS" scheme="https://greenmeeple.github.io/tags/UdS/"/>
    
  </entry>
  
  <entry>
    <title>Leetcode SQL 50 (Portal 🚪)</title>
    <link href="https://greenmeeple.github.io/notes/sql50/"/>
    <id>https://greenmeeple.github.io/notes/sql50/</id>
    <published>2024-10-20T21:59:01.000Z</published>
    <updated>2025-05-09T01:50:01.421Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;This is a portal for my walkthroughs of SQL 50 on Leetcode&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a</summary>
        
      
    
    
    
    <category term="Notes" scheme="https://greenmeeple.github.io/categories/Notes/"/>
    
    
    <category term="LeetCode" scheme="https://greenmeeple.github.io/tags/LeetCode/"/>
    
    <category term="SQL" scheme="https://greenmeeple.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>hexo-zhruby -- Implementing HTML Ruby tag in Hexo</title>
    <link href="https://greenmeeple.github.io/projects/hexo-zhruby/"/>
    <id>https://greenmeeple.github.io/projects/hexo-zhruby/</id>
    <published>2024-10-14T02:04:55.000Z</published>
    <updated>2025-05-09T02:11:08.017Z</updated>
    
    
    <summary type="html">&lt;p&gt;Implement the HTML tag &lt;code&gt;&amp;lt;ruby&amp;gt;&lt;/code&gt; for Hexo using &lt;a href=&quot;https://hexo.io/docs/tag-plugins&quot;&gt;Tag Plugin&lt;/a&gt; feature. Provide auto pronounciation indication for Jyutping (Cantonese), Zhuyin (Taiwanese Mandarin), and Pinyin (Chinese Mandarin), and the default setting for general usage. Support Traditonal and Simplified Chinese characters. &lt;/p&gt;
&lt;p&gt;Inspired by the &lt;a href=&quot;https://github.com/jamespan/hexo-ruby-character&quot;&gt;hexo-ruby-character&lt;/a&gt; by &lt;a href=&quot;https://github.com/jamespan&quot;&gt;jamespan&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Install&quot;&gt;&lt;a href=&quot;#Install&quot; class=&quot;headerlink&quot; title=&quot;Install&quot;&gt;&lt;/a&gt;Install&lt;/h2&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;npm install hexo-zhruby --save
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;Use-cases&quot;&gt;&lt;a href=&quot;#Use-cases&quot; class=&quot;headerlink&quot; title=&quot;Use cases&quot;&gt;&lt;/a&gt;Use cases&lt;/h2&gt;&lt;p&gt;Ruby (ルビ) is also known as &lt;a href=&quot;https://en.wikipedia.org/wiki/Furigana&quot;&gt;Furigana&lt;/a&gt; (振り仮名).  It contains two basic use cases:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;To clarify or indicate the pronunciation for readers&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Kanji#Special_readings&quot;&gt;Gikun&lt;/a&gt;, in which the characters have different pronunciations than they seem due to convention or for a specific context. For example, the pronunciation of 煙草 in Japanese is &lt;em&gt;tabako (tobacco)&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;Usage&quot;&gt;&lt;a href=&quot;#Usage&quot; class=&quot;headerlink&quot; title=&quot;Usage&quot;&gt;&lt;/a&gt;Usage&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;TLDR&lt;/strong&gt;: Usage: &lt;code&gt;&amp;#123;% tag rb|rt %&amp;#125;&lt;/code&gt;; Tag options: &lt;code&gt;ruby_def&lt;/code&gt;, &lt;code&gt;ruby_jy&lt;/code&gt;, &lt;code&gt;ruby_py&lt;/code&gt;, &lt;code&gt;ruby_zy&lt;/code&gt;.&lt;/p&gt;
&lt;hr&gt;</summary>
    
    
    
    <category term="Projects" scheme="https://greenmeeple.github.io/categories/Projects/"/>
    
    
    <category term="Hexo" scheme="https://greenmeeple.github.io/tags/Hexo/"/>
    
    <category term="Node.js" scheme="https://greenmeeple.github.io/tags/Node-js/"/>
    
    <category term="HTML" scheme="https://greenmeeple.github.io/tags/HTML/"/>
    
    <category term="Cantonese" scheme="https://greenmeeple.github.io/tags/Cantonese/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Tag Plugin (2) -- Create and publish your own Hexo Tag Plugin</title>
    <link href="https://greenmeeple.github.io/js/hexo-tagplugin-2/"/>
    <id>https://greenmeeple.github.io/js/hexo-tagplugin-2/</id>
    <published>2024-10-13T02:03:12.000Z</published>
    <updated>2025-05-09T02:00:44.234Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;This blog post is trying to tell you:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How to use your own Tag Plugin in local environment?&lt;/li&gt;
&lt;li&gt;How to publish your Tag Plugin to npm and hexo?&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;For explaination on &lt;code&gt;Tag Plugin&lt;/code&gt; and &lt;code&gt;Scripts&lt;/code&gt; in Hexo, see the previous post &lt;a href=&quot;../hexo-tagplugin-1&quot;&gt;Hexo Tag Plugin (1) – Use ‘Hexo Scripts’ to create your own Tag Plugin&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Plugin&quot;&gt;&lt;a href=&quot;#Plugin&quot; class=&quot;headerlink&quot; title=&quot;Plugin&quot;&gt;&lt;/a&gt;Plugin&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Be Careful! Don’t mix &lt;code&gt;Plugin&lt;/code&gt;, &lt;code&gt;Tag&lt;/code&gt;, and &lt;code&gt;Tag Plugin&lt;/code&gt; in Hexo, even though they look extremely similar.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Usually, &lt;code&gt;Plugin&lt;/code&gt; are for complicated functions. Yet if you want to publish your custom &lt;code&gt;Tag Plugin&lt;/code&gt; to the NPM registry or even shown on the Hexo Community Page, &lt;code&gt;Plugin&lt;/code&gt; would be a very good choice.&lt;/p&gt;
&lt;h3 id=&quot;From-Script-to-Plugin&quot;&gt;&lt;a href=&quot;#From-Script-to-Plugin&quot; class=&quot;headerlink&quot; title=&quot;From Script to Plugin&quot;&gt;&lt;/a&gt;From Script to Plugin&lt;/h3&gt;&lt;p&gt;Assume you already have a script call &lt;code&gt;index.js&lt;/code&gt;, and you want to turn it into package, you may do the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Navigate &lt;code&gt;node_modules&lt;/code&gt; folder in your project folder. This is the folder where Hexo stored all the packages for your blog. Create a folder inside and the name must begin with &lt;code&gt;hexo-&lt;/code&gt; or Hexo will ignore it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Your folder must contain at least two files: the actual JavaScript code and &lt;code&gt;package.json&lt;/code&gt; file that describes the purpose of the plugin and sets its dependencies.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;directory&quot;&gt;.
├── index.js
└── package.json
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In &lt;code&gt;package.json&lt;/code&gt;, it should at least have the &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;version&lt;/code&gt; and &lt;code&gt;main&lt;/code&gt; entries set.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;json&quot;&gt;&amp;#123;
    &amp;quot;name&amp;quot;: &amp;quot;hexo-my-plugin&amp;quot;,
    &amp;quot;version&amp;quot;: &amp;quot;0.0.1&amp;quot;,
    &amp;quot;main&amp;quot;: &amp;quot;index&amp;quot;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the root &lt;code&gt;package.json&lt;/code&gt; of your hexo project, you also need to list your &lt;code&gt;plugin&lt;/code&gt; as a &lt;code&gt;dependency&lt;/code&gt;, for Hexo to detect and load it.&lt;br&gt; Please remember that if your package contain other dependencies, also install and list them for testing and dubugging.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;json&quot;&gt;&amp;#123;
    &amp;quot;name&amp;quot;: &amp;quot;hexo-site&amp;quot;,
    &amp;quot;version&amp;quot;: &amp;quot;0.0.0&amp;quot;,
    &amp;quot;private&amp;quot;: true,
    &amp;quot;scripts&amp;quot;: &amp;#123;
        &amp;quot;build&amp;quot;: &amp;quot;hexo generate&amp;quot;,
        &amp;quot;clean&amp;quot;: &amp;quot;hexo clean&amp;quot;,
        &amp;quot;deploy&amp;quot;: &amp;quot;hexo deploy&amp;quot;,
        &amp;quot;server&amp;quot;: &amp;quot;hexo server&amp;quot;
    &amp;#125;,
    &amp;quot;hexo&amp;quot;: &amp;#123;
        &amp;quot;version&amp;quot;: &amp;quot;&amp;quot;
    &amp;#125;,
    &amp;quot;dependencies&amp;quot;: &amp;#123;
        &amp;quot;hexo&amp;quot;: &amp;quot;^7.3.0&amp;quot;,
        ...
        &amp;quot;hexo-my-plugin&amp;quot;: &amp;quot;0.0.1&amp;quot;,
        &amp;quot;my-plugin-dependency1&amp;quot;: &amp;quot;2.0.0&amp;quot;,
        &amp;quot;my-plugin-dependency2&amp;quot;: &amp;quot;2.0.0&amp;quot;
    &amp;#125;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;If you run command that check all the package after step 4, for exmaple &lt;code&gt;hexo clean&lt;/code&gt;, it will check all the packages in &lt;code&gt;node_modules&lt;/code&gt; and remove packages that are not publish on npm.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Publish-Plugin-to-npm&quot;&gt;&lt;a href=&quot;#Publish-Plugin-to-npm&quot; class=&quot;headerlink&quot; title=&quot;Publish Plugin to npm&quot;&gt;&lt;/a&gt;Publish Plugin to npm&lt;/h2&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://greenmeeple.github.io/categories/JavaScript/"/>
    
    
    <category term="Hexo" scheme="https://greenmeeple.github.io/tags/Hexo/"/>
    
    <category term="Node.js" scheme="https://greenmeeple.github.io/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Tag Plugin (1) -- Use &#39;Hexo Scripts&#39; to create your own Tag Plugin</title>
    <link href="https://greenmeeple.github.io/js/hexo-tagplugin-1/"/>
    <id>https://greenmeeple.github.io/js/hexo-tagplugin-1/</id>
    <published>2024-10-12T02:03:12.000Z</published>
    <updated>2025-05-09T02:00:53.163Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;This blog post is trying to tell you:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What is Hexo Tag and Hexo script?&lt;/li&gt;
&lt;li&gt;How to implement your own Hexo Tag Plugin using Hexo Script?&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;To color your personal Hexo Blog with more features, scripts and plugins are your powerful tools to use. Below we are trying to create our own &lt;code&gt;tag plugin&lt;/code&gt; for the Hexo blog.&lt;/p&gt;
&lt;h2 id=&quot;Tag-Plugin&quot;&gt;&lt;a href=&quot;#Tag-Plugin&quot; class=&quot;headerlink&quot; title=&quot;Tag Plugin&quot;&gt;&lt;/a&gt;Tag Plugin&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Be careful! Tag plugins are different from &lt;a href=&quot;https://hexo.io/docs/front-matter&quot;&gt;post tags&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Tag plugins are special type of syntax that you may use in your Markdown file.&lt;/p&gt;
&lt;p&gt;Hexo has already provided some default Tag plugins like &lt;code&gt;Block Quote&lt;/code&gt; and &lt;code&gt;iframe&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;Usage&quot;&gt;&lt;a href=&quot;#Usage&quot; class=&quot;headerlink&quot; title=&quot;Usage&quot;&gt;&lt;/a&gt;Usage&lt;/h3&gt;&lt;p&gt;For example, the syntax of &lt;code&gt;iframe&lt;/code&gt; tag is:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;Markdown&quot;&gt;&amp;#123;% iframe url [width] [height] %&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let say I want to embed a video from me and my friends’ YouTube video:&lt;/p&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://greenmeeple.github.io/categories/JavaScript/"/>
    
    
    <category term="Hexo" scheme="https://greenmeeple.github.io/tags/Hexo/"/>
    
    <category term="Node.js" scheme="https://greenmeeple.github.io/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>Railroad Diagram of version range operators</title>
    <link href="https://greenmeeple.github.io/js/json-dependencies-diagram/"/>
    <id>https://greenmeeple.github.io/js/json-dependencies-diagram/</id>
    <published>2024-10-11T00:19:03.000Z</published>
    <updated>2025-05-09T02:08:40.212Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;This is a image version of the post &lt;a href=&quot;../json-dependencies/&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a name=&quot;range-set&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;range-set:&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;/images/json_dep_diagram/range-set.png&quot; alt=&quot;range-set&quot;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;EBNF&quot;&gt;range-set   ::= range ( logical-or range )*
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;logical-or:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/json_dep_diagram/logical-or.png&quot; alt=&quot;logical-or&quot;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;EBNF&quot;&gt;logical-or  ::= &amp;#39; &amp;#39;* &amp;#39;||&amp;#39; &amp;#39; &amp;#39;*
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;referenced by: &lt;a href=&quot;#range-set&quot;&gt;range-set&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a name=&quot;range&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;range:&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://greenmeeple.github.io/categories/JavaScript/"/>
    
    
    <category term="Node.js" scheme="https://greenmeeple.github.io/tags/Node-js/"/>
    
    <category term="json" scheme="https://greenmeeple.github.io/tags/json/"/>
    
  </entry>
  
  <entry>
    <title>Explaination of version range operators in package.json for package dependencies</title>
    <link href="https://greenmeeple.github.io/js/json-dependencies/"/>
    <id>https://greenmeeple.github.io/js/json-dependencies/</id>
    <published>2024-10-10T17:04:37.000Z</published>
    <updated>2025-05-09T02:08:27.303Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;To see the syntax and Railroad diagram version, goto &lt;a href=&quot;../json-dependencies-diagram/&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Basic-Structure&quot;&gt;&lt;a href=&quot;#Basic-Structure&quot; class=&quot;headerlink&quot; title=&quot;Basic Structure&quot;&gt;&lt;/a&gt;Basic Structure&lt;/h2&gt;&lt;p&gt;Package dependecies are a tuple of &lt;code&gt;[major, minor, patch]&lt;/code&gt; with numeric values.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;json&quot;&gt;&amp;#123;
    &amp;quot;name&amp;quot;: &amp;quot;project name&amp;quot;,
    &amp;quot;version&amp;quot;: &amp;quot;0.0.1&amp;quot;,
    &amp;quot;description&amp;quot;: &amp;quot;description of the project&amp;quot;,
    &amp;quot;keywords&amp;quot;: [
        &amp;quot;keyword 1&amp;quot;,
        &amp;quot;keyword 2&amp;quot;
    ],
    &amp;quot;author&amp;quot;: &amp;quot;John Doe&amp;quot;,
    &amp;quot;dependencies&amp;quot;: &amp;#123;
      &amp;quot;package-1&amp;quot;: &amp;quot;~0.6.2&amp;quot;,
      &amp;quot;package-2&amp;quot;: &amp;quot;&amp;gt;=2.6.2&amp;quot;
    &amp;#125;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;Version-Range-operator&quot;&gt;&lt;a href=&quot;#Version-Range-operator&quot; class=&quot;headerlink&quot; title=&quot;Version Range operator&quot;&gt;&lt;/a&gt;Version Range operator&lt;/h2&gt;&lt;h3 id=&quot;Basic-Range&quot;&gt;&lt;a href=&quot;#Basic-Range&quot; class=&quot;headerlink&quot; title=&quot;Basic Range&quot;&gt;&lt;/a&gt;Basic Range&lt;/h3&gt;&lt;p&gt;For &lt;code&gt;x&lt;/code&gt; in exmaple, see &lt;strong&gt;Advanced Range&lt;/strong&gt; below.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;Operator&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;Explaination&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;&lt;code&gt;=&lt;/code&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;package version must be exactly matched&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;code&gt;1.0.0&lt;/code&gt; :&amp;#x3D; &lt;code&gt;=1.0.0&lt;/code&gt;&lt;br&gt;(They are equivalent)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;package version must be less than indicated&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;code&gt;&amp;lt;2.0.0&lt;/code&gt; &lt;br&gt;:&amp;#x3D;version from &lt;code&gt;0.0.1&lt;/code&gt; to &lt;code&gt;1.x.x&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;&lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;package version must be less than or euqal to indicated&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;code&gt;&amp;lt;=2.0.0&lt;/code&gt; &lt;br&gt;:&amp;#x3D;version from &lt;code&gt;0.0.1&lt;/code&gt; to &lt;code&gt;2.0.0&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;package version must be greater than indicated&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;code&gt;&amp;gt;2.0.0&lt;/code&gt;:&amp;#x3D; &lt;br&gt;version from &lt;code&gt;2.0.1&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt; (x &amp;gt;&amp;#x3D; 2)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;&lt;code&gt;&amp;gt;=&lt;/code&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;package version must be greater than or euqal to indicated&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;code&gt;&amp;gt;=2.0.0&lt;/code&gt; &lt;br&gt;:&amp;#x3D;version from &lt;code&gt;2.0.0&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt; (x &amp;gt;&amp;#x3D; 2)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;&lt;code&gt;||&lt;/code&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;joined one or more operator&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;code&gt;&amp;gt;2.0.1 || &amp;lt;1.7.3&lt;/code&gt; &lt;br&gt;:&amp;#x3D;version greater than &lt;code&gt;2.0.1&lt;/code&gt; or less than &lt;code&gt;1.7.3&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;&lt;code&gt;space&lt;/code&gt;&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Intersected one or more operator&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;code&gt;&amp;gt;=2.0.1  &amp;lt;=1.7.3&lt;/code&gt; &lt;br&gt;:&amp;#x3D;version from &lt;code&gt;2.0.1&lt;/code&gt; to &lt;code&gt;1.7.3&lt;/code&gt; (inclusive)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h3 id=&quot;Advanced-Range&quot;&gt;&lt;a href=&quot;#Advanced-Range&quot; class=&quot;headerlink&quot; title=&quot;Advanced Range&quot;&gt;&lt;/a&gt;Advanced Range&lt;/h3&gt;&lt;p&gt;Advanced ranges may be combined in the same way as primitive comparators using &lt;code&gt;space&lt;/code&gt; or &lt;code&gt;||&lt;/code&gt;.&lt;/p&gt;</summary>
    
    
    
    <category term="JavaScript" scheme="https://greenmeeple.github.io/categories/JavaScript/"/>
    
    
    <category term="Node.js" scheme="https://greenmeeple.github.io/tags/Node-js/"/>
    
    <category term="json" scheme="https://greenmeeple.github.io/tags/json/"/>
    
  </entry>
  
  <entry>
    <title>Why you shouldn&#39;t deploy your Hexo webpage using GitHub Desktop?</title>
    <link href="https://greenmeeple.github.io/github-desktop/"/>
    <id>https://greenmeeple.github.io/github-desktop/</id>
    <published>2024-10-10T00:34:07.000Z</published>
    <updated>2025-05-09T02:28:50.404Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Methods-to-Deploy-Hexo-to-GitHub-io&quot;&gt;&lt;a href=&quot;#Methods-to-Deploy-Hexo-to-GitHub-io&quot; class=&quot;headerlink&quot; title=&quot;Methods to Deploy Hexo to GitHub.io&quot;&gt;&lt;/a&gt;Methods to Deploy Hexo to GitHub.io&lt;/h2&gt;&lt;p&gt;Assume you’ve created a repository on GitHub called &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;. Here are two common method you can deploy you Hexo Blog:&lt;/p&gt;
&lt;h3 id=&quot;Hexo-Command&quot;&gt;&lt;a href=&quot;#Hexo-Command&quot; class=&quot;headerlink&quot; title=&quot;Hexo Command&quot;&gt;&lt;/a&gt;Hexo Command&lt;/h3&gt;&lt;p&gt;Hexo’s documentations and Tutorial has provided sufficient instructions on deploying your personal website on your GitHub repository.&lt;/p&gt;
&lt;p&gt;According to the &lt;a href=&quot;https://hexo.io/docs/github-pages&quot;&gt;Hexo Tutorial&lt;/a&gt;, we can deploy the repository by using &lt;a href=&quot;https://docs.github.com/en/actions&quot;&gt;GitHub Actions&lt;/a&gt;.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Create and Add the following contents to &lt;code&gt;.github/workflows/pages.yml&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;yml&quot;&gt;name: Pages

on:
push:
    branches:
    - main # default branch

jobs:
build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
        with:
        token: $&amp;#123;&amp;#123; secrets.GITHUB_TOKEN &amp;#125;&amp;#125;
        submodules: recursive
    - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
        # Examples: 20, 18.19, &amp;gt;=16.20.2, lts/Iron, lts/Hydrogen, *, latest, current, node
        # Ref: https://github.com/actions/setup-node#supported-version-syntax
        node-version: &amp;quot;&amp;gt;=20&amp;quot; 

    - name: Cache NPM dependencies
        uses: actions/cache@v4
        with:
        path: node_modules
        key: $&amp;#123;&amp;#123; runner.OS &amp;#125;&amp;#125;-npm-cache
        restore-keys: |
            $&amp;#123;&amp;#123; runner.OS &amp;#125;&amp;#125;-npm-cache
    - name: Install Dependencies
        run: npm install
    - name: Build
        run: npm run build
    - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
        path: ./public
deploy:
    needs: build
    permissions:
    pages: write
    id-token: write
    environment:
    name: github-pages
    url: $&amp;#123;&amp;#123; steps.deployment.outputs.page_url &amp;#125;&amp;#125;
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install &lt;code&gt;hexo-deployer-git&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add&amp;#x2F;Change the following configurations to &lt;code&gt;_config.yml&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;yml&quot;&gt;deploy:
type: git
repo: https://github.com/&amp;lt;username&amp;gt;/&amp;lt;project&amp;gt;
# for example, this blog is https://github.com/greenmeeple/greenmeeple.github.io
branch: gh-pages
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After finishing your bog posts, Run &lt;code&gt;hexo clean &amp;amp;&amp;amp; hexo deploy&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;GitHub-Desktop&quot;&gt;&lt;a href=&quot;#GitHub-Desktop&quot; class=&quot;headerlink&quot; title=&quot;GitHub Desktop&quot;&gt;&lt;/a&gt;GitHub Desktop&lt;/h3&gt;&lt;p&gt;Many Users installed &lt;a href=&quot;https://desktop.github.com/download/&quot;&gt;GitHub Desktop&lt;/a&gt; for better visualization on changes, so do I. It provides more intuitive push and commit procedure and instruction compared to terminal. Most of the time I use it to make sure no unexpected line changes or modification.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/site_notes/github_desktop.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;But soon I noticed that, every time after running &lt;code&gt;hexo clean &amp;amp;&amp;amp; hexo deploy&lt;/code&gt;, GitHub Desktop will warn me that there’s something need to be pulled. When I pull it for merging it return &lt;code&gt;Unable to merge unrelated histories in repository&lt;/code&gt;. Even in the image above, it shows that I should pull something. However, how would I need to pull if I’ve just push it?&lt;/p&gt;</summary>
    
    
    
    <category term="Git" scheme="https://greenmeeple.github.io/categories/Git/"/>
    
    
    <category term="GitHub" scheme="https://greenmeeple.github.io/tags/GitHub/"/>
    
    <category term="Hexo" scheme="https://greenmeeple.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Mathjax prime superscript problem in Hexo theme</title>
    <link href="https://greenmeeple.github.io/site/hexo-mathjax/"/>
    <id>https://greenmeeple.github.io/site/hexo-mathjax/</id>
    <published>2024-10-09T02:09:35.000Z</published>
    <updated>2025-05-09T02:26:43.600Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Prime-superscript-problem-e-g-x’-i-in-Mathjax&quot;&gt;&lt;a href=&quot;#Prime-superscript-problem-e-g-x’-i-in-Mathjax&quot; class=&quot;headerlink&quot; title=&quot;Prime superscript problem (e.g. x’_i) in Mathjax&quot;&gt;&lt;/a&gt;Prime superscript problem (e.g. x’_i) in Mathjax&lt;/h2&gt;&lt;p&gt;When I was using &lt;a href=&quot;https://www.mathjax.org/&quot;&gt;Mathjax&lt;/a&gt; to create math formula in my blog post, I typed&lt;br&gt;&lt;code&gt;((q_1, q_2), a, (q&amp;#39;_1, q&amp;#39;_2)) &#92;in S &#92;times &#92;Sigma_&amp;#123;int&amp;#125; &#92;times S&lt;/code&gt; and it rendered as&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;$((q_1, q_2), a, (q’_1, q’&lt;em&gt;2)) &#92;in S &#92;times &#92;Sigma&lt;/em&gt;{int} &#92;times S$&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;However, when &lt;code&gt;((q_1, q_2), a, (q&amp;#39;_1, q&amp;#39;_2))&lt;/code&gt; &amp;amp; &lt;code&gt;&#92;in S &#92;times &#92;Sigma_&amp;#123;int&amp;#125; &#92;times S&lt;/code&gt; are seperated, they rendered properly.&lt;/p&gt;
&lt;p&gt;$$((q_1, q_2), a, (q’_1, q’_2))$$&lt;/p&gt;
&lt;p&gt;$$&#92;in S &#92;times &#92;Sigma_{int} &#92;times S$$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Maybe I should use &lt;code&gt;&#92;left&lt;/code&gt; and &lt;code&gt;&#92;right&lt;/code&gt; for (), just like &lt;code&gt;&#92;lbrace&lt;/code&gt; and &lt;code&gt;&#92;rbrace&lt;/code&gt; for {}?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So I typed &lt;code&gt;&#92;left( &#92;left( q_1, q_2 &#92;right), a, &#92;left( q&amp;#39;_1, q&amp;#39;_2 &#92;right) &#92;right) &#92;in S &#92;times &#92;Sigma_&amp;#123;int&amp;#125; &#92;times S&lt;/code&gt;, didn’t work out:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;$&#92;left( &#92;left( q_1, q_2 &#92;right), a, &#92;left( q’_1, q’&lt;em&gt;2 &#92;right) &#92;right) &#92;in S &#92;times &#92;Sigma&lt;/em&gt;{int} &#92;times S$&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;Source-of-error&quot;&gt;&lt;a href=&quot;#Source-of-error&quot; class=&quot;headerlink&quot; title=&quot;Source of error&quot;&gt;&lt;/a&gt;Source of error&lt;/h2&gt;</summary>
    
    
    
    <category term="SiteNote" scheme="https://greenmeeple.github.io/categories/SiteNote/"/>
    
    
    <category term="Hexo" scheme="https://greenmeeple.github.io/tags/Hexo/"/>
    
    <category term="Latex" scheme="https://greenmeeple.github.io/tags/Latex/"/>
    
    <category term="Mathjax" scheme="https://greenmeeple.github.io/tags/Mathjax/"/>
    
  </entry>
  
</feed>
